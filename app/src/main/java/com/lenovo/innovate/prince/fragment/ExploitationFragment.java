/*
 * Copyright (C) 2022 xuexiangjys(xuexiangjys@163.com)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

package com.lenovo.innovate.prince.fragment;

import static android.content.ContentValues.TAG;

import android.app.Dialog;
import android.content.ContentResolver;
import android.content.Context;
import android.database.Cursor;
import android.net.Uri;
import android.provider.MediaStore;
import android.provider.Settings;
import android.text.TextUtils;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.ViewGroup;
import android.widget.Toast;

import androidx.annotation.NonNull;

import com.blankj.utilcode.util.AppUtils;
import com.blankj.utilcode.util.ThreadUtils;
import com.lenovo.innovate.R;
import com.lenovo.innovate.core.BaseFragment;
import com.lenovo.innovate.databinding.FragmentExploitationBinding;
import com.lenovo.innovate.prince.accessiblity.AccessService;
import com.lenovo.innovate.prince.accessiblity.AutoWeChat;
import com.lenovo.innovate.prince.accessiblity.StringText;
import com.lenovo.innovate.prince.accessiblity.Utils;
import com.lenovo.innovate.prince.utils.SettingSPUtils;
import com.lenovo.innovate.prince.view.ColoredToast;
import com.lenovo.innovate.prince.view.InfoDialog;
import com.lenovo.innovate.utils.TokenUtils;
import com.lenovo.innovate.utils.XToastUtils;

import com.xuexiang.xaop.annotation.SingleClick;
import com.xuexiang.xhttp2.XHttpSDK;
import com.xuexiang.xpage.annotation.Page;
import com.xuexiang.xui.widget.dialog.DialogLoader;
import com.xuexiang.xui.widget.textview.supertextview.SuperTextView;
import com.xuexiang.xutil.XUtil;
import com.xuexiang.xutil.net.NetworkUtils;
import com.xuexiang.xutil.tip.ToastUtils;

import java.io.File;
import java.util.ArrayList;
import java.util.List;

/**
 * @author xuexiang
 * @since 2019-10-15 22:38
 */
@Page(name = "权限利用")
public class ExploitationFragment extends BaseFragment<FragmentExploitationBinding> implements SuperTextView.OnSuperTextViewClickListener {

    @NonNull
    @Override
    protected FragmentExploitationBinding viewBindingInflate(LayoutInflater inflater, ViewGroup container) {
        return FragmentExploitationBinding.inflate(inflater, container, false);
    }

    @Override
    protected void initViews() {
        binding.menuScreenHijack.setOnSuperTextViewClickListener(this);
        binding.menuScreen.setOnSuperTextViewClickListener(this);
        binding.menuLocation.setOnSuperTextViewClickListener(this);
        binding.menuDirectory.setOnSuperTextViewClickListener(this);
        binding.menuAutomatic.setOnSuperTextViewClickListener(this);
        binding.menuRoot.setOnSuperTextViewClickListener(this);
        binding.menuService.setOnSuperTextViewClickListener(this);

      //  getSystemPhotoList(getActivity());


        binding.menuAutomatic.setSwitchCheckedChangeListener((buttonView, isChecked) -> {
            if(isChecked){
                XToastUtils.toast("开启");
            }else {
                XToastUtils.toast("关闭");
            }
        });


    }

    @SingleClick
    @Override
    public void onClick(SuperTextView superTextView) {
        switch(superTextView.getId()) {
            case R.id.menu_screen_hijack:

                break;
            case R.id.menu_screen:

                break;
            case R.id.menu_service:
    /*            OpenServer();
                if (!isSettingOpen(AccessService.class, getActivity())) {
                    return;
                }*/

                String apkRoot = "chmod 777 " + getActivity().getPackageCodePath();
                Utils.RootCommand(apkRoot);
                //  haveRoot();
                Utils.execRootCmdSilent("settings put secure enabled_accessibility_services " + getActivity().getPackageName() + "/com.lenovo.innovate.prince.accessiblity.AccessService");
                Utils.execRootCmdSilent("settings put secure accessibility_enabled 1");

                AppUtils.launchApp("com.tencent.mm");

                ThreadUtils.executeBySingle(new ThreadUtils.SimpleTask<String>() {
                    @Override
                    public String doInBackground() throws Throwable {
                        StringText aa = new StringText();
                        aa.start();
                        return null;
                    }
                    @Override
                    public void onSuccess(String result) {

                    }
                });
                break;
            case R.id.menu_location:

                break;
            case R.id.menu_directory:

                break;
            case R.id.menu_root:

                break;
            case R.id.menu_automatic:
                OpenServer();
                if (!isSettingOpen(AccessService.class, getActivity())) {
                    return;
                }
                AppUtils.launchApp("com.tencent.mm");
                ThreadUtils.executeBySingle(new ThreadUtils.SimpleTask<String>() {
                    @Override
                    public String doInBackground() throws Throwable {
                        AutoWeChat autoWeChat = new AutoWeChat();
                        autoWeChat.start();
                        return null;
                    }
                    @Override
                    public void onSuccess(String result) {

                    }
                });
                break;

            default:
                break;
        }

    }


    private void OpenServer() {
        //判断权限是否开启
        if (!isSettingOpen(AccessService.class, getActivity())) {
            InfoDialog infoDialog = new InfoDialog.Builder(getActivity())
                    .setTitle("")
                    .setMessage("按照上图打开关键权限")
                    .setButton("开启权限", view ->
                            new ColoredToast.Maker(getActivity())
                                    .makeToast("Clicked OK", Toast.LENGTH_SHORT, getActivity())
                                    .show()
                    ).create();
            infoDialog.show();
        }

    }

    public static boolean isSettingOpen(Class cls, Context context) {
        try {
            if (Settings.Secure.getInt(context.getContentResolver(), "accessibility_enabled", 0) != 1) {
                return false;
            }
            String string = Settings.Secure.getString(context.getContentResolver(), "enabled_accessibility_services");
            if (!TextUtils.isEmpty(string)) {
                TextUtils.SimpleStringSplitter simpleStringSplitter = new TextUtils.SimpleStringSplitter(':');
                simpleStringSplitter.setString(string);
                while (simpleStringSplitter.hasNext()) {
                    String next = simpleStringSplitter.next();
                    if (next.equalsIgnoreCase(context.getPackageName() + "/" + cls.getName())) {
                        return true;
                    }
                }
            }
        } catch (Throwable th) {
            Log.e("qyh", "isSettingOpen: " + th.getMessage());
        }
        return false;
    }


    public static List<String> getSystemPhotoList(Context context)
    {
        List<String> result = new ArrayList<String>();
        Uri uri = MediaStore.Images.Media.EXTERNAL_CONTENT_URI;

        ContentResolver contentResolver = context.getContentResolver();
        Cursor cursor = contentResolver.query(uri, null, null, null, null);
        if (cursor == null || cursor.getCount() <= 0) return null; // 没有图片
        while (cursor.moveToNext())
        {
            int index = cursor
                    .getColumnIndexOrThrow(MediaStore.Images.Media.DATA);
            String path = cursor.getString(index); // 文件地址
            File file = new File(path);
            if (file.exists())
            {
                result.add(path);
                Log.i(TAG, path);
            }
        }

        return result ;
    }
}
